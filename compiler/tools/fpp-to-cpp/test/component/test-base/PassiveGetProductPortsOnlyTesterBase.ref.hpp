// ======================================================================
// \title  PassiveGetProductPortsOnlyTesterBase.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for PassiveGetProductPortsOnly component test harness base class
// ======================================================================

#ifndef PassiveGetProductPortsOnlyTesterBase_HPP
#define PassiveGetProductPortsOnlyTesterBase_HPP

#include <cstdio>

#include "Fw/Comp/PassiveComponentBase.hpp"
#include "Fw/Port/InputSerializePort.hpp"
#include "Fw/Types/Assert.hpp"
#include "Fw/Types/ExternalString.hpp"
#include "test-base/PassiveGetProductPortsOnlyComponentAc.hpp"

//! \class PassiveGetProductPortsOnlyTesterBase
//! \brief Auto-generated base for PassiveGetProductPortsOnly component test harness
class PassiveGetProductPortsOnlyTesterBase :
  public Fw::PassiveComponentBase
{

  public:

    // ----------------------------------------------------------------------
    // Component initialization
    // ----------------------------------------------------------------------

    //! Initialize object PassiveGetProductPortsOnlyTesterBase
    virtual void init(
        FwEnumStoreType instance = 0 //!< The instance number
    );

  public:

    // ----------------------------------------------------------------------
    // Getters for from ports
    // ----------------------------------------------------------------------

    //! Get from port at index
    //!
    //! \return from_productGetOut[portNum]
    Fw::InputDpGetPort* get_from_productGetOut(
        FwIndexType portNum //!< The port number
    );

    //! Get from port at index
    //!
    //! \return from_productSendOut[portNum]
    Fw::InputDpSendPort* get_from_productSendOut(
        FwIndexType portNum //!< The port number
    );

  protected:

    // ----------------------------------------------------------------------
    // Component construction and destruction
    // ----------------------------------------------------------------------

    //! Construct object PassiveGetProductPortsOnlyTesterBase
    PassiveGetProductPortsOnlyTesterBase(
        const char* const compName, //!< The component name
        const U32 maxHistorySize //!< The maximum size of each history
    );

    //! Destroy object PassiveGetProductPortsOnlyTesterBase
    virtual ~PassiveGetProductPortsOnlyTesterBase();

  protected:

    // ----------------------------------------------------------------------
    // Getters for port counts
    // ----------------------------------------------------------------------

    //! Get the number of from_productGetOut ports
    //!
    //! \return The number of from_productGetOut ports
    static constexpr FwIndexType getNum_from_productGetOut() {
      return PassiveGetProductPortsOnlyComponentBase::NUM_PRODUCTGETOUT_OUTPUT_PORTS;
    }

    //! Get the number of from_productSendOut ports
    //!
    //! \return The number of from_productSendOut ports
    static constexpr FwIndexType getNum_from_productSendOut() {
      return PassiveGetProductPortsOnlyComponentBase::NUM_PRODUCTSENDOUT_OUTPUT_PORTS;
    }

  private:

    // ----------------------------------------------------------------------
    // From ports
    // ----------------------------------------------------------------------

    //! From port connected to productGetOut
    Fw::InputDpGetPort m_from_productGetOut[1];

    //! From port connected to productSendOut
    Fw::InputDpSendPort m_from_productSendOut[1];

};

#endif
